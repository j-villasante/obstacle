{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/src/Ball.js","static/src/BallController.js","static/src/app.js","static/src/utils/index.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Ball {\n    constructor (context, x, y, r) {\n        this.x = x\n        this.y = y\n        this.radius = r\n        this.color = this.getRandomColor()\n        this.ctx = context\n        this.loading = true\n        this.setLoadingState()\n    }\n\n    getRandomColor () {\n        return '#000000'.replace(/0/g, () => (~~(Math.random() * 16)).toString(16))\n    }\n\n    setSpeed (vx, vy) {\n        this.vx = vx\n        this.vy = vy\n    }\n\n    get centerPoint () {\n        return {\n            x: this.x,\n            y: this.y\n        }\n    }\n\n    setPosition (x, y) {\n        this.x = x\n        this.y = y\n    }\n\n    move () {\n        if (this.loading) return\n        this.x += this.vx\n        this.y += this.vy\n    }\n\n    setLoadingState () {\n        setTimeout(() => {\n            this.loading = false\n        }, 1000)\n    }\n\n    draw () {\n        this.ctx.beginPath()\n        this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true)\n        this.ctx.closePath()\n        this.ctx.fillStyle = this.color\n        this.ctx.fill()\n    }\n}\n\nmodule.exports = Ball\n","const Ball = require('./Ball.js')\nconst utils = require('./utils')\n\nclass BallController {\n    constructor (context, canvas) {\n        this.ctx = context\n        this.canvas = canvas\n        this.balls = []\n    }\n\n    addBall (quantity = 1) {\n        let i = 0\n        while (i < quantity) {\n            let randRadius = utils.getRandomInt(10, 25)\n            let randomX = utils.getRandomInt(0 + randRadius, this.canvas.width - randRadius)\n            let randomY = utils.getRandomInt(0 + randRadius, this.canvas.height - randRadius)\n            let randSpeedX = utils.getRandomInt(3, 8)\n            let randSpeedY = utils.getRandomInt(3, 8)\n            let ball = new Ball(this.ctx, randomX, randomY, randRadius)\n            ball.setSpeed(randSpeedX, randSpeedY)\n            this.balls.push(ball)\n            i++\n        }\n    }\n\n    moveBalls () {\n        for (let ball of this.balls) {\n            if (ball.y + ball.vy + ball.radius > this.canvas.height || ball.y + ball.vy - ball.radius < 0) {\n                ball.vy = -ball.vy\n            }\n\n            if (ball.x + ball.vx + ball.radius > this.canvas.width || ball.x + ball.vx - ball.radius < 0) {\n                ball.vx = -ball.vx\n            }\n            ball.move()\n        }\n    }\n\n    detectColision () {\n        for (let ball of this.balls) {\n            let distance = utils.getDistanceBewteenPoints(this.staticBall.centerPoint, ball.centerPoint)\n            if (!ball.loading && distance <= ball.radius + this.staticBall.radius) {\n                return true\n            }\n        }\n        return false\n    }\n\n    createStaticBall () {\n        this.staticBall = new Ball(this.ctx, 25, 25, 15)\n    }\n\n    moveBallOnMouseMove (e) {\n        let rect = this.canvas.getBoundingClientRect()\n        this.staticBall.setPosition(e.clientX - rect.left, e.clientY - rect.top)\n    }\n\n    render () {\n        for (let ball of this.balls) {\n            ball.draw()\n        }\n        this.staticBall.draw()\n    }\n}\n\nmodule.exports = BallController\n","const BallController = require('./BallController.js')\n\nclass Main {\n    constructor () {\n        this.canvas = document.getElementById('canvas')\n        this.canvas.width = document.body.clientWidth\n        this.canvas.height = document.body.clientHeight - document.getElementById('content').offsetHeight\n        this.spanScore = document.getElementById('span-balls')\n        this.ctx = this.canvas.getContext('2d')\n        this.ballCount = 3\n        this.increment = 1\n        this.runningTime = 0\n        this.running = false\n    }\n\n    setNewBallsController () {\n        this.controller = new BallController(this.ctx, this.canvas)\n    }\n\n    animate () {\n        this.ctx.fillStyle = 'rgba(255, 255, 255, 0.6)'\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n        this.controller.moveBalls()\n        this.controller.render()\n        if (this.controller.detectColision()) {\n            this.running = false\n            this.ctx.fillStyle = 'rgba(255, 255, 255, 0.8)'\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.fillStyle = '#FF0000'\n            this.ctx.font = '48px serif'\n            this.ctx.fillText('Game over', 0, 100)\n        } else {\n            window.requestAnimationFrame(() => this.animate())\n        }\n    }\n\n    runTimer () {\n        setTimeout(() => {\n            this.runningTime += 0.5\n            this.spanScore.innerHTML = this.runningTime * 2\n            if (this.running) {\n                this.runTimer()\n            }\n        }, 500)\n    }\n\n    addBallsInterval (interval) {\n        setTimeout(() => {\n            this.controller.addBall(this.increment)\n            this.ballCount += this.increment\n            this.increment++\n            if (this.running) {\n                this.addBallsInterval(interval)\n            }\n        }, interval)\n    }\n\n    startGame () {\n        if (this.running) return\n        this.running = true\n        this.setNewBallsController()\n        this.controller.addBall(this.ballCount)\n        this.controller.createStaticBall()\n        this.runTimer()\n        this.addBallsInterval(5000)\n        this.animate(this.controller)\n    }\n\n    restart () {\n        this.ballCount = 3\n        this.increment = 1\n        this.runningTime = 0\n        this.spanScore.innerHTML = 0\n        this.startGame()\n    }\n\n    start () {\n        this.startGame()\n        this.canvas.addEventListener('mousemove', e => this.controller.moveBallOnMouseMove(e))\n    }\n}\n\nlet main = new Main()\nmain.start()\ndocument.getElementById('btn-restart').addEventListener('click', e => main.restart())\n","class Utils {\n    /**\n     * Returns a random number between min (inclusive) and max (exclusive)\n     */\n    getRandomArbitrary (min, max) {\n        return Math.random() * (max - min) + min\n    }\n\n    /**\n     * Returns a random integer between min (inclusive) and max (inclusive)\n     * Using Math.round() will give you a non-uniform distribution!\n     */\n    getRandomInt (min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min\n    }\n\n    getDistanceBewteenPoints (a, b) {\n        return Math.hypot(a.x - b.x, a.y - b.y)\n    }\n}\n\nmodule.exports = new Utils()\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}